{
  "data": {
    "name": "The Paper Airplane Store",
    "description": "If it&#039;s paper and it flies, we got it!",
    "url": "https:\/\/paperairplane.store",
    "home": "https:\/\/paperairplane.store",
    "gmt_offset": -6,
    "timezone_string": "America\/Chicago",
    "namespaces": [
      "oembed\/1.0",
      "wpcomsh\/v1",
      "akismet\/v1",
      "jetpack\/v4",
      "wpcom\/v2",
      "wp\/v2"
    ],
    "authentication": [],
    "routes": {
      "\/": {
        "namespace": "",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/"
        }
      },
      "\/oembed\/1.0": {
        "namespace": "oembed\/1.0",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "oembed\/1.0"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/oembed\/1.0"
        }
      },
      "\/oembed\/1.0\/embed": {
        "namespace": "oembed\/1.0",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "url": {
                "required": true
              },
              "format": {
                "required": false,
                "default": "json"
              },
              "maxwidth": {
                "required": false,
                "default": 600
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/oembed\/1.0\/embed"
        }
      },
      "\/oembed\/1.0\/proxy": {
        "namespace": "oembed\/1.0",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "url": {
                "required": true,
                "description": "The URL of the resource for which to fetch oEmbed data.",
                "type": "string"
              },
              "format": {
                "required": false,
                "default": "json",
                "enum": [
                  "json",
                  "xml"
                ],
                "description": "The oEmbed format to use.",
                "type": "string"
              },
              "maxwidth": {
                "required": false,
                "default": 600,
                "description": "The maximum width of the embed frame in pixels.",
                "type": "integer"
              },
              "maxheight": {
                "required": false,
                "description": "The maximum height of the embed frame in pixels.",
                "type": "integer"
              },
              "discover": {
                "required": false,
                "default": true,
                "description": "Whether to perform an oEmbed discovery request for non-whitelisted providers.",
                "type": "boolean"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/oembed\/1.0\/proxy"
        }
      },
      "\/wpcomsh\/v1": {
        "namespace": "wpcomsh\/v1",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "wpcomsh\/v1"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcomsh\/v1"
        }
      },
      "\/wpcomsh\/v1\/export": {
        "namespace": "wpcomsh\/v1",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcomsh\/v1\/export"
        }
      },
      "\/wpcomsh\/v1\/reconnect": {
        "namespace": "wpcomsh\/v1",
        "methods": [
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "POST"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcomsh\/v1\/reconnect"
        }
      },
      "\/akismet\/v1": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "akismet\/v1"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/akismet\/v1"
        }
      },
      "\/akismet\/v1\/key": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "key": {
                "required": true,
                "description": "A 12-character Akismet API key. Available at akismet.com\/get\/",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/akismet\/v1\/key"
        }
      },
      "\/akismet\/v1\/settings": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "akismet_strictness": {
                "required": false,
                "description": "If true, Akismet will automatically discard the worst spam automatically rather than putting it in the spam folder.",
                "type": "boolean"
              },
              "akismet_show_user_comments_approved": {
                "required": false,
                "description": "If true, show the number of approved comments beside each comment author in the comments list page.",
                "type": "boolean"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/akismet\/v1\/settings"
        }
      },
      "\/akismet\/v1\/stats": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "interval": {
                "required": false,
                "default": "all",
                "description": "The time period for which to retrieve stats. Options: 60-days, 6-months, all",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/akismet\/v1\/stats"
        }
      },
      "\/akismet\/v1\/stats\/(?P<interval>[\\w+])": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "interval": {
                "required": false,
                "description": "The time period for which to retrieve stats. Options: 60-days, 6-months, all",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/akismet\/v1\/alert": {
        "namespace": "akismet\/v1",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "key": {
                "required": false,
                "description": "A 12-character Akismet API key. Available at akismet.com\/get\/",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "key": {
                "required": false,
                "description": "A 12-character Akismet API key. Available at akismet.com\/get\/",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "key": {
                "required": false,
                "description": "A 12-character Akismet API key. Available at akismet.com\/get\/",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/akismet\/v1\/alert"
        }
      },
      "\/jetpack\/v4": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "jetpack\/v4"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4"
        }
      },
      "\/jetpack\/v4\/plans": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/plans"
        }
      },
      "\/jetpack\/v4\/jitm": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/jitm"
        }
      },
      "\/jetpack\/v4\/verify_registration": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/verify_registration"
        }
      },
      "\/jetpack\/v4\/remote_authorize": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/remote_authorize"
        }
      },
      "\/jetpack\/v4\/connection": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection"
        }
      },
      "\/jetpack\/v4\/connection\/test": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection\/test"
        }
      },
      "\/jetpack\/v4\/rewind": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/rewind"
        }
      },
      "\/jetpack\/v4\/connection\/url": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection\/url"
        }
      },
      "\/jetpack\/v4\/connection\/data": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection\/data"
        }
      },
      "\/jetpack\/v4\/connection\/owner": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection\/owner"
        }
      },
      "\/jetpack\/v4\/tracking\/settings": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "tracks_opt_out": {
                "required": false,
                "type": "boolean"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/tracking\/settings"
        }
      },
      "\/jetpack\/v4\/connection\/user": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/connection\/user"
        }
      },
      "\/jetpack\/v4\/site": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/site"
        }
      },
      "\/jetpack\/v4\/site\/features": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/site\/features"
        }
      },
      "\/jetpack\/v4\/site\/posts\/related": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/site\/posts\/related"
        }
      },
      "\/jetpack\/v4\/identity-crisis\/confirm-safe-mode": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/identity-crisis\/confirm-safe-mode"
        }
      },
      "\/jetpack\/v4\/identity-crisis\/start-fresh": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/identity-crisis\/start-fresh"
        }
      },
      "\/jetpack\/v4\/identity-crisis\/migrate": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/identity-crisis\/migrate"
        }
      },
      "\/jetpack\/v4\/module\/all": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/module\/all"
        }
      },
      "\/jetpack\/v4\/module\/all\/active": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "modules": {
                "required": true,
                "default": "",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "active": {
                "required": false,
                "default": true,
                "type": "boolean"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/module\/all\/active"
        }
      },
      "\/jetpack\/v4\/module\/(?P<slug>[a-z\\-]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "edit"
              },
              "carousel_background_color": {
                "required": false,
                "default": "black",
                "enum": [
                  "black",
                  "white"
                ],
                "description": "Color scheme.",
                "type": "string"
              },
              "carousel_display_exif": {
                "required": false,
                "default": 0,
                "description": "Show photo metadata (<a href=\"http:\/\/en.wikipedia.org\/wiki\/Exchangeable_image_file_format\" target=\"_blank\">Exif<\/a>) in carousel, when available.",
                "type": "boolean"
              },
              "highlander_comment_form_prompt": {
                "required": false,
                "default": "Leave a Reply",
                "description": "Greeting Text",
                "type": "string"
              },
              "jetpack_comment_form_color_scheme": {
                "required": false,
                "default": "light",
                "enum": [
                  "light",
                  "dark",
                  "transparent"
                ],
                "description": "Color scheme",
                "type": "string"
              },
              "jetpack_portfolio": {
                "required": false,
                "default": 0,
                "description": "Enable or disable Jetpack portfolio post type.",
                "type": "boolean"
              },
              "jetpack_portfolio_posts_per_page": {
                "required": false,
                "default": 10,
                "description": "Number of entries to show at most in Portfolio pages.",
                "type": "integer"
              },
              "jetpack_testimonial": {
                "required": false,
                "default": 0,
                "description": "Enable or disable Jetpack testimonial post type.",
                "type": "boolean"
              },
              "jetpack_testimonial_posts_per_page": {
                "required": false,
                "default": 10,
                "description": "Number of entries to show at most in Testimonial pages.",
                "type": "integer"
              },
              "tiled_galleries": {
                "required": false,
                "default": 0,
                "description": "Display all your gallery pictures in a cool mosaic.",
                "type": "boolean"
              },
              "gravatar_disable_hovercards": {
                "required": false,
                "default": "enabled",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "description": "View people&#039;s profiles when you mouse over their Gravatars",
                "type": "string"
              },
              "infinite_scroll": {
                "required": false,
                "default": 1,
                "description": "To infinity and beyond",
                "type": "boolean"
              },
              "infinite_scroll_google_analytics": {
                "required": false,
                "default": 0,
                "description": "Use Google Analytics with Infinite Scroll",
                "type": "boolean"
              },
              "wpl_default": {
                "required": false,
                "default": "on",
                "enum": [
                  "on",
                  "off"
                ],
                "description": "WordPress.com Likes are",
                "type": "string"
              },
              "social_notifications_like": {
                "required": false,
                "default": 1,
                "description": "Send email notification when someone likes a post",
                "type": "boolean"
              },
              "wpcom_publish_comments_with_markdown": {
                "required": false,
                "default": 0,
                "description": "Use Markdown for comments.",
                "type": "boolean"
              },
              "wpcom_publish_posts_with_markdown": {
                "required": false,
                "default": 0,
                "description": "Use Markdown for posts.",
                "type": "boolean"
              },
              "wp_mobile_excerpt": {
                "required": false,
                "default": 0,
                "description": "Excerpts",
                "type": "boolean"
              },
              "wp_mobile_featured_images": {
                "required": false,
                "default": 0,
                "description": "Featured Images",
                "type": "boolean"
              },
              "wp_mobile_app_promos": {
                "required": false,
                "default": 0,
                "description": "Show a promo for the WordPress mobile apps in the footer of the mobile theme.",
                "type": "boolean"
              },
              "monitor_receive_notifications": {
                "required": false,
                "default": 0,
                "description": "Receive Monitor Email Notifications.",
                "type": "boolean"
              },
              "post_by_email_address": {
                "required": false,
                "default": "noop",
                "enum": [
                  "noop",
                  "create",
                  "regenerate",
                  "delete"
                ],
                "description": "Email Address",
                "type": "string"
              },
              "jetpack_protect_key": {
                "required": false,
                "default": "",
                "description": "Protect API key",
                "type": "string"
              },
              "jetpack_protect_global_whitelist": {
                "required": false,
                "default": "",
                "description": "Protect global whitelist",
                "type": "string"
              },
              "sharing_services": {
                "required": false,
                "default": {
                  "visible": [
                    "twitter",
                    "facebook",
                    "google-plus-1"
                  ],
                  "hidden": []
                },
                "description": "Enabled Services and those hidden behind a button",
                "type": "object"
              },
              "button_style": {
                "required": false,
                "default": "icon",
                "enum": [
                  "icon-text",
                  "icon",
                  "text",
                  "official"
                ],
                "description": "Button Style",
                "type": "string"
              },
              "sharing_label": {
                "required": false,
                "default": "",
                "description": "Sharing Label",
                "type": "string"
              },
              "show": {
                "required": false,
                "default": [
                  "post"
                ],
                "description": "Views where buttons are shown",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "jetpack-twitter-cards-site-tag": {
                "required": false,
                "default": "",
                "description": "The Twitter username of the owner of this site&#039;s domain.",
                "type": "string"
              },
              "sharedaddy_disable_resources": {
                "required": false,
                "default": 0,
                "description": "Disable CSS and JS",
                "type": "boolean"
              },
              "custom": {
                "required": false,
                "default": {
                  "sharing_name": "",
                  "sharing_url": "",
                  "sharing_icon": ""
                },
                "description": "Custom sharing services added by user.",
                "type": "object"
              },
              "sharing_delete_service": {
                "required": false,
                "default": "",
                "description": "Delete custom sharing service.",
                "type": "string"
              },
              "jetpack_sso_require_two_step": {
                "required": false,
                "default": 0,
                "description": "Require Two-Step Authentication",
                "type": "boolean"
              },
              "jetpack_sso_match_by_email": {
                "required": false,
                "default": 0,
                "description": "Match by Email",
                "type": "boolean"
              },
              "stb_enabled": {
                "required": false,
                "default": 1,
                "description": "Show a &lt;em&gt;&#039;follow blog&#039;&lt;\/em&gt; option in the comment form",
                "type": "boolean"
              },
              "stc_enabled": {
                "required": false,
                "default": 1,
                "description": "Show a &lt;em&gt;&#039;follow comments&#039;&lt;\/em&gt; option in the comment form",
                "type": "boolean"
              },
              "show_headline": {
                "required": false,
                "default": 1,
                "description": "Highlight related content with a heading",
                "type": "boolean"
              },
              "show_thumbnails": {
                "required": false,
                "default": 0,
                "description": "Show a thumbnail image where available",
                "type": "boolean"
              },
              "onpublish": {
                "required": false,
                "default": 0,
                "description": "Proofread when a post or page is first published.",
                "type": "boolean"
              },
              "onupdate": {
                "required": false,
                "default": 0,
                "description": "Proofread when a post or page is updated.",
                "type": "boolean"
              },
              "Bias Language": {
                "required": false,
                "default": 0,
                "description": "Bias Language",
                "type": "boolean"
              },
              "Cliches": {
                "required": false,
                "default": 0,
                "description": "Clich\u00e9s",
                "type": "boolean"
              },
              "Complex Expression": {
                "required": false,
                "default": 0,
                "description": "Complex Phrases",
                "type": "boolean"
              },
              "Diacritical Marks": {
                "required": false,
                "default": 0,
                "description": "Diacritical Marks",
                "type": "boolean"
              },
              "Double Negative": {
                "required": false,
                "default": 0,
                "description": "Double Negatives",
                "type": "boolean"
              },
              "Hidden Verbs": {
                "required": false,
                "default": 0,
                "description": "Hidden Verbs",
                "type": "boolean"
              },
              "Jargon Language": {
                "required": false,
                "default": 0,
                "description": "Jargon",
                "type": "boolean"
              },
              "Passive voice": {
                "required": false,
                "default": 0,
                "description": "Passive Voice",
                "type": "boolean"
              },
              "Phrases to Avoid": {
                "required": false,
                "default": 0,
                "description": "Phrases to Avoid",
                "type": "boolean"
              },
              "Redundant Expression": {
                "required": false,
                "default": 0,
                "description": "Redundant Phrases",
                "type": "boolean"
              },
              "guess_lang": {
                "required": false,
                "default": 0,
                "description": "Use automatically detected language to proofread posts and pages",
                "type": "boolean"
              },
              "ignored_phrases": {
                "required": false,
                "default": "",
                "description": "Add Phrase to be ignored",
                "type": "string"
              },
              "unignore_phrase": {
                "required": false,
                "default": "",
                "description": "Remove Phrase from being ignored",
                "type": "string"
              },
              "google": {
                "required": false,
                "default": "",
                "description": "Google Search Console",
                "type": "string"
              },
              "bing": {
                "required": false,
                "default": "",
                "description": "Bing Webmaster Center",
                "type": "string"
              },
              "pinterest": {
                "required": false,
                "default": "",
                "description": "Pinterest Site Verification",
                "type": "string"
              },
              "yandex": {
                "required": false,
                "default": "",
                "description": "Yandex Site Verification",
                "type": "string"
              },
              "enable_header_ad": {
                "required": false,
                "default": 1,
                "description": "Display an ad unit at the top of each page.",
                "type": "boolean"
              },
              "wordads_approved": {
                "required": false,
                "default": 0,
                "description": "Is site approved for WordAds?",
                "type": "boolean"
              },
              "wordads_second_belowpost": {
                "required": false,
                "default": 1,
                "description": "Display second ad below post?",
                "type": "boolean"
              },
              "wordads_display_front_page": {
                "required": false,
                "default": 1,
                "description": "Display ads on the front page?",
                "type": "boolean"
              },
              "wordads_display_post": {
                "required": false,
                "default": 1,
                "description": "Display ads on posts?",
                "type": "boolean"
              },
              "wordads_display_page": {
                "required": false,
                "default": 1,
                "description": "Display ads on pages?",
                "type": "boolean"
              },
              "wordads_display_archive": {
                "required": false,
                "default": 1,
                "description": "Display ads on archive pages?",
                "type": "boolean"
              },
              "wordads_custom_adstxt": {
                "required": false,
                "default": "",
                "description": "Custom ads.txt entries",
                "type": "string"
              },
              "google_analytics_tracking_id": {
                "required": false,
                "default": "",
                "description": "Google Analytics",
                "type": "string"
              },
              "admin_bar": {
                "required": false,
                "default": 1,
                "description": "Put a chart showing 48 hours of views in the admin bar.",
                "type": "boolean"
              },
              "roles": {
                "required": false,
                "default": [
                  "administrator"
                ],
                "description": "Select the roles that will be able to view stats reports.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "count_roles": {
                "required": false,
                "default": [
                  "administrator"
                ],
                "description": "Count the page views of registered users who are logged in.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "blog_id": {
                "required": false,
                "default": 0,
                "description": "Blog ID.",
                "type": "boolean"
              },
              "do_not_track": {
                "required": false,
                "default": 1,
                "description": "Do not track.",
                "type": "boolean"
              },
              "hide_smile": {
                "required": false,
                "default": 1,
                "description": "Hide the stats smiley face image.",
                "type": "boolean"
              },
              "version": {
                "required": false,
                "default": 9,
                "description": "Version.",
                "type": "integer"
              },
              "akismet_show_user_comments_approved": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "wordpress_api_key": {
                "required": false,
                "default": "",
                "description": "",
                "type": "string"
              },
              "dismiss_dash_app_card": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "dismiss_empty_stats_card": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "lang_id": {
                "required": false,
                "default": "en_US",
                "description": "Primary language for the site.",
                "type": "string"
              },
              "onboarding": {
                "required": false,
                "default": {
                  "siteTitle": "",
                  "siteDescription": "",
                  "siteType": "personal",
                  "homepageFormat": "posts",
                  "addContactForm": 0,
                  "businessAddress": {
                    "name": "",
                    "street": "",
                    "city": "",
                    "state": "",
                    "zip": ""
                  },
                  "installWooCommerce": false
                },
                "description": "",
                "type": "object"
              },
              "show_welcome_for_new_plan": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "after-the-deadline": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "carousel": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "comment-likes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "comments": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "contact-form": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "custom-content-types": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "custom-css": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "enhanced-distribution": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "google-analytics": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "gravatar-hovercards": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "infinite-scroll": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "json-api": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "latex": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "lazy-images": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "likes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "manage": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "markdown": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "masterbar": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "minileven": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "monitor": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "notes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "photon-cdn": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "photon": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "post-by-email": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "protect": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "publicize": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "pwa": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "related-posts": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "search": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "seo-tools": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sharedaddy": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "shortcodes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "shortlinks": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sitemaps": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sso": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "stats": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "subscriptions": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "tiled-gallery": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "vaultpress": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "verification-tools": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "videopress": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "widget-visibility": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "widgets": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "wordads": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/module\/(?P<slug>[a-z\\-]+)\/active": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "active": {
                "required": true,
                "default": true,
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/module\/(?P<slug>[a-z\\-]+)\/data": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "range": {
                "required": false,
                "default": "day",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/module\/(?P<service>[a-z\\-]+)\/key\/check": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "api_key": {
                "required": false,
                "default": "",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/settings": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH",
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "edit"
              },
              "carousel_background_color": {
                "required": false,
                "default": "black",
                "enum": [
                  "black",
                  "white"
                ],
                "description": "Color scheme.",
                "type": "string"
              },
              "carousel_display_exif": {
                "required": false,
                "default": 0,
                "description": "Show photo metadata (<a href=\"http:\/\/en.wikipedia.org\/wiki\/Exchangeable_image_file_format\" target=\"_blank\">Exif<\/a>) in carousel, when available.",
                "type": "boolean"
              },
              "highlander_comment_form_prompt": {
                "required": false,
                "default": "Leave a Reply",
                "description": "Greeting Text",
                "type": "string"
              },
              "jetpack_comment_form_color_scheme": {
                "required": false,
                "default": "light",
                "enum": [
                  "light",
                  "dark",
                  "transparent"
                ],
                "description": "Color scheme",
                "type": "string"
              },
              "jetpack_portfolio": {
                "required": false,
                "default": 0,
                "description": "Enable or disable Jetpack portfolio post type.",
                "type": "boolean"
              },
              "jetpack_portfolio_posts_per_page": {
                "required": false,
                "default": 10,
                "description": "Number of entries to show at most in Portfolio pages.",
                "type": "integer"
              },
              "jetpack_testimonial": {
                "required": false,
                "default": 0,
                "description": "Enable or disable Jetpack testimonial post type.",
                "type": "boolean"
              },
              "jetpack_testimonial_posts_per_page": {
                "required": false,
                "default": 10,
                "description": "Number of entries to show at most in Testimonial pages.",
                "type": "integer"
              },
              "tiled_galleries": {
                "required": false,
                "default": 0,
                "description": "Display all your gallery pictures in a cool mosaic.",
                "type": "boolean"
              },
              "gravatar_disable_hovercards": {
                "required": false,
                "default": "enabled",
                "enum": [
                  "enabled",
                  "disabled"
                ],
                "description": "View people&#039;s profiles when you mouse over their Gravatars",
                "type": "string"
              },
              "infinite_scroll": {
                "required": false,
                "default": 1,
                "description": "To infinity and beyond",
                "type": "boolean"
              },
              "infinite_scroll_google_analytics": {
                "required": false,
                "default": 0,
                "description": "Use Google Analytics with Infinite Scroll",
                "type": "boolean"
              },
              "wpl_default": {
                "required": false,
                "default": "on",
                "enum": [
                  "on",
                  "off"
                ],
                "description": "WordPress.com Likes are",
                "type": "string"
              },
              "social_notifications_like": {
                "required": false,
                "default": 1,
                "description": "Send email notification when someone likes a post",
                "type": "boolean"
              },
              "wpcom_publish_comments_with_markdown": {
                "required": false,
                "default": 0,
                "description": "Use Markdown for comments.",
                "type": "boolean"
              },
              "wpcom_publish_posts_with_markdown": {
                "required": false,
                "default": 0,
                "description": "Use Markdown for posts.",
                "type": "boolean"
              },
              "wp_mobile_excerpt": {
                "required": false,
                "default": 0,
                "description": "Excerpts",
                "type": "boolean"
              },
              "wp_mobile_featured_images": {
                "required": false,
                "default": 0,
                "description": "Featured Images",
                "type": "boolean"
              },
              "wp_mobile_app_promos": {
                "required": false,
                "default": 0,
                "description": "Show a promo for the WordPress mobile apps in the footer of the mobile theme.",
                "type": "boolean"
              },
              "monitor_receive_notifications": {
                "required": false,
                "default": 0,
                "description": "Receive Monitor Email Notifications.",
                "type": "boolean"
              },
              "post_by_email_address": {
                "required": false,
                "default": "noop",
                "enum": [
                  "noop",
                  "create",
                  "regenerate",
                  "delete"
                ],
                "description": "Email Address",
                "type": "string"
              },
              "jetpack_protect_key": {
                "required": false,
                "default": "",
                "description": "Protect API key",
                "type": "string"
              },
              "jetpack_protect_global_whitelist": {
                "required": false,
                "default": "",
                "description": "Protect global whitelist",
                "type": "string"
              },
              "sharing_services": {
                "required": false,
                "default": {
                  "visible": [
                    "twitter",
                    "facebook",
                    "google-plus-1"
                  ],
                  "hidden": []
                },
                "description": "Enabled Services and those hidden behind a button",
                "type": "object"
              },
              "button_style": {
                "required": false,
                "default": "icon",
                "enum": [
                  "icon-text",
                  "icon",
                  "text",
                  "official"
                ],
                "description": "Button Style",
                "type": "string"
              },
              "sharing_label": {
                "required": false,
                "default": "",
                "description": "Sharing Label",
                "type": "string"
              },
              "show": {
                "required": false,
                "default": [
                  "post"
                ],
                "description": "Views where buttons are shown",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "jetpack-twitter-cards-site-tag": {
                "required": false,
                "default": "",
                "description": "The Twitter username of the owner of this site&#039;s domain.",
                "type": "string"
              },
              "sharedaddy_disable_resources": {
                "required": false,
                "default": 0,
                "description": "Disable CSS and JS",
                "type": "boolean"
              },
              "custom": {
                "required": false,
                "default": {
                  "sharing_name": "",
                  "sharing_url": "",
                  "sharing_icon": ""
                },
                "description": "Custom sharing services added by user.",
                "type": "object"
              },
              "sharing_delete_service": {
                "required": false,
                "default": "",
                "description": "Delete custom sharing service.",
                "type": "string"
              },
              "jetpack_sso_require_two_step": {
                "required": false,
                "default": 0,
                "description": "Require Two-Step Authentication",
                "type": "boolean"
              },
              "jetpack_sso_match_by_email": {
                "required": false,
                "default": 0,
                "description": "Match by Email",
                "type": "boolean"
              },
              "stb_enabled": {
                "required": false,
                "default": 1,
                "description": "Show a &lt;em&gt;&#039;follow blog&#039;&lt;\/em&gt; option in the comment form",
                "type": "boolean"
              },
              "stc_enabled": {
                "required": false,
                "default": 1,
                "description": "Show a &lt;em&gt;&#039;follow comments&#039;&lt;\/em&gt; option in the comment form",
                "type": "boolean"
              },
              "show_headline": {
                "required": false,
                "default": 1,
                "description": "Highlight related content with a heading",
                "type": "boolean"
              },
              "show_thumbnails": {
                "required": false,
                "default": 0,
                "description": "Show a thumbnail image where available",
                "type": "boolean"
              },
              "onpublish": {
                "required": false,
                "default": 0,
                "description": "Proofread when a post or page is first published.",
                "type": "boolean"
              },
              "onupdate": {
                "required": false,
                "default": 0,
                "description": "Proofread when a post or page is updated.",
                "type": "boolean"
              },
              "Bias Language": {
                "required": false,
                "default": 0,
                "description": "Bias Language",
                "type": "boolean"
              },
              "Cliches": {
                "required": false,
                "default": 0,
                "description": "Clich\u00e9s",
                "type": "boolean"
              },
              "Complex Expression": {
                "required": false,
                "default": 0,
                "description": "Complex Phrases",
                "type": "boolean"
              },
              "Diacritical Marks": {
                "required": false,
                "default": 0,
                "description": "Diacritical Marks",
                "type": "boolean"
              },
              "Double Negative": {
                "required": false,
                "default": 0,
                "description": "Double Negatives",
                "type": "boolean"
              },
              "Hidden Verbs": {
                "required": false,
                "default": 0,
                "description": "Hidden Verbs",
                "type": "boolean"
              },
              "Jargon Language": {
                "required": false,
                "default": 0,
                "description": "Jargon",
                "type": "boolean"
              },
              "Passive voice": {
                "required": false,
                "default": 0,
                "description": "Passive Voice",
                "type": "boolean"
              },
              "Phrases to Avoid": {
                "required": false,
                "default": 0,
                "description": "Phrases to Avoid",
                "type": "boolean"
              },
              "Redundant Expression": {
                "required": false,
                "default": 0,
                "description": "Redundant Phrases",
                "type": "boolean"
              },
              "guess_lang": {
                "required": false,
                "default": 0,
                "description": "Use automatically detected language to proofread posts and pages",
                "type": "boolean"
              },
              "ignored_phrases": {
                "required": false,
                "default": "",
                "description": "Add Phrase to be ignored",
                "type": "string"
              },
              "unignore_phrase": {
                "required": false,
                "default": "",
                "description": "Remove Phrase from being ignored",
                "type": "string"
              },
              "google": {
                "required": false,
                "default": "",
                "description": "Google Search Console",
                "type": "string"
              },
              "bing": {
                "required": false,
                "default": "",
                "description": "Bing Webmaster Center",
                "type": "string"
              },
              "pinterest": {
                "required": false,
                "default": "",
                "description": "Pinterest Site Verification",
                "type": "string"
              },
              "yandex": {
                "required": false,
                "default": "",
                "description": "Yandex Site Verification",
                "type": "string"
              },
              "enable_header_ad": {
                "required": false,
                "default": 1,
                "description": "Display an ad unit at the top of each page.",
                "type": "boolean"
              },
              "wordads_approved": {
                "required": false,
                "default": 0,
                "description": "Is site approved for WordAds?",
                "type": "boolean"
              },
              "wordads_second_belowpost": {
                "required": false,
                "default": 1,
                "description": "Display second ad below post?",
                "type": "boolean"
              },
              "wordads_display_front_page": {
                "required": false,
                "default": 1,
                "description": "Display ads on the front page?",
                "type": "boolean"
              },
              "wordads_display_post": {
                "required": false,
                "default": 1,
                "description": "Display ads on posts?",
                "type": "boolean"
              },
              "wordads_display_page": {
                "required": false,
                "default": 1,
                "description": "Display ads on pages?",
                "type": "boolean"
              },
              "wordads_display_archive": {
                "required": false,
                "default": 1,
                "description": "Display ads on archive pages?",
                "type": "boolean"
              },
              "wordads_custom_adstxt": {
                "required": false,
                "default": "",
                "description": "Custom ads.txt entries",
                "type": "string"
              },
              "google_analytics_tracking_id": {
                "required": false,
                "default": "",
                "description": "Google Analytics",
                "type": "string"
              },
              "admin_bar": {
                "required": false,
                "default": 1,
                "description": "Put a chart showing 48 hours of views in the admin bar.",
                "type": "boolean"
              },
              "roles": {
                "required": false,
                "default": [
                  "administrator"
                ],
                "description": "Select the roles that will be able to view stats reports.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "count_roles": {
                "required": false,
                "default": [
                  "administrator"
                ],
                "description": "Count the page views of registered users who are logged in.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "blog_id": {
                "required": false,
                "default": 0,
                "description": "Blog ID.",
                "type": "boolean"
              },
              "do_not_track": {
                "required": false,
                "default": 1,
                "description": "Do not track.",
                "type": "boolean"
              },
              "hide_smile": {
                "required": false,
                "default": 1,
                "description": "Hide the stats smiley face image.",
                "type": "boolean"
              },
              "version": {
                "required": false,
                "default": 9,
                "description": "Version.",
                "type": "integer"
              },
              "akismet_show_user_comments_approved": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "wordpress_api_key": {
                "required": false,
                "default": "",
                "description": "",
                "type": "string"
              },
              "dismiss_dash_app_card": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "dismiss_empty_stats_card": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "lang_id": {
                "required": false,
                "default": "en_US",
                "description": "Primary language for the site.",
                "type": "string"
              },
              "onboarding": {
                "required": false,
                "default": {
                  "siteTitle": "",
                  "siteDescription": "",
                  "siteType": "personal",
                  "homepageFormat": "posts",
                  "addContactForm": 0,
                  "businessAddress": {
                    "name": "",
                    "street": "",
                    "city": "",
                    "state": "",
                    "zip": ""
                  },
                  "installWooCommerce": false
                },
                "description": "",
                "type": "object"
              },
              "show_welcome_for_new_plan": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "after-the-deadline": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "carousel": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "comment-likes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "comments": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "contact-form": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "custom-content-types": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "custom-css": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "enhanced-distribution": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "google-analytics": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "gravatar-hovercards": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "infinite-scroll": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "json-api": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "latex": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "lazy-images": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "likes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "manage": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "markdown": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "masterbar": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "minileven": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "monitor": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "notes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "photon-cdn": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "photon": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "post-by-email": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "protect": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "publicize": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "pwa": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "related-posts": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "search": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "seo-tools": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sharedaddy": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "shortcodes": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "shortlinks": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sitemaps": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "sso": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "stats": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "subscriptions": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "tiled-gallery": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "vaultpress": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "verification-tools": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "videopress": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "widget-visibility": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "widgets": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              },
              "wordads": {
                "required": false,
                "default": 0,
                "description": "",
                "type": "boolean"
              }
            }
          },
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/settings"
        }
      },
      "\/jetpack\/v4\/settings\/(?P<slug>[a-z\\-]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "edit"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/options\/(?P<options>[a-z\\-]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ]
      },
      "\/jetpack\/v4\/jumpstart": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "active": {
                "required": true
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/jumpstart"
        }
      },
      "\/jetpack\/v4\/updates\/plugins": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/updates\/plugins"
        }
      },
      "\/jetpack\/v4\/notice\/(?P<notice>[a-z\\-_]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": []
          }
        ]
      },
      "\/jetpack\/v4\/plugins": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/jetpack\/v4\/plugins"
        }
      },
      "\/jetpack\/v4\/plugin\/(?P<plugin>[a-z\\\/\\.\\-_]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ]
      },
      "\/jetpack\/v4\/widgets\/(?P<id>[0-9a-z\\-_]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ]
      },
      "\/jetpack\/v4\/verify-site\/(?P<service>[a-z\\-_]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "keyring_id": {
                "required": true,
                "type": "integer"
              }
            }
          }
        ]
      },
      "\/jetpack\/v4\/verify-site\/(?P<service>[a-z\\-_]+)\/(?<keyring_id>[0-9]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ]
      },
      "\/jetpack\/v4\/service-api-keys\/(?P<service>[a-z\\-_]+)": {
        "namespace": "jetpack\/v4",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "service_api_key": {
                "required": true,
                "type": "text"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": []
          }
        ]
      },
      "\/wpcom\/v2": {
        "namespace": "wpcom\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "wpcom\/v2"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcom\/v2"
        }
      },
      "\/wpcom\/v2\/hello": {
        "namespace": "wpcom\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcom\/v2\/hello"
        }
      },
      "\/wpcom\/v2\/publicize\/connections": {
        "namespace": "wpcom\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcom\/v2\/publicize\/connections"
        }
      },
      "\/wpcom\/v2\/publicize\/connection-test-results": {
        "namespace": "wpcom\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcom\/v2\/publicize\/connection-test-results"
        }
      },
      "\/wpcom\/v2\/publicize\/services": {
        "namespace": "wpcom\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wpcom\/v2\/publicize\/services"
        }
      },
      "\/wp\/v2": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "namespace": {
                "required": false,
                "default": "wp\/v2"
              },
              "context": {
                "required": false,
                "default": "view"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2"
        }
      },
      "\/wp\/v2\/posts": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "default": [],
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              },
              "categories": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items that have the specified term assigned in the categories taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "categories_exclude": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items except those that have the specified term assigned in the categories taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "tags": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items that have the specified term assigned in the tags taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "tags_exclude": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items except those that have the specified term assigned in the tags taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "sticky": {
                "required": false,
                "description": "Limit result set to items that are sticky.",
                "type": "boolean"
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "format": {
                "required": false,
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ],
                "description": "The format for the object.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "sticky": {
                "required": false,
                "description": "Whether or not the object should be treated as sticky.",
                "type": "boolean"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "categories": {
                "required": false,
                "description": "The terms assigned to the object in the category taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "tags": {
                "required": false,
                "description": "The terms assigned to the object in the post_tag taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "jetpack_publicize_connections": {
                "required": false,
                "default": [],
                "type": "array",
                "items": {
                  "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                  "title": "jetpack-publicize-post-connection",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the Publicize Connection",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "service_name": {
                      "description": "Alphanumeric identifier for the Publicize Service",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "display_name": {
                      "description": "Username of the connected account",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "enabled": {
                      "description": "Whether to share to this connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ]
                    },
                    "done": {
                      "description": "Whether Publicize has already finished sharing for this post",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    },
                    "toggleable": {
                      "description": "Whether `enable` can be changed for this post\/connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/posts"
        }
      },
      "\/wp\/v2\/posts\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "format": {
                "required": false,
                "enum": [
                  "standard",
                  "aside",
                  "chat",
                  "gallery",
                  "link",
                  "image",
                  "quote",
                  "status",
                  "video",
                  "audio"
                ],
                "description": "The format for the object.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "sticky": {
                "required": false,
                "description": "Whether or not the object should be treated as sticky.",
                "type": "boolean"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "categories": {
                "required": false,
                "description": "The terms assigned to the object in the category taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "tags": {
                "required": false,
                "description": "The terms assigned to the object in the post_tag taxonomy.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "jetpack_publicize_connections": {
                "required": false,
                "type": "array",
                "items": {
                  "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                  "title": "jetpack-publicize-post-connection",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the Publicize Connection",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "service_name": {
                      "description": "Alphanumeric identifier for the Publicize Service",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "display_name": {
                      "description": "Username of the connected account",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "enabled": {
                      "description": "Whether to share to this connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ]
                    },
                    "done": {
                      "description": "Whether Publicize has already finished sharing for this post",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    },
                    "toggleable": {
                      "description": "Whether `enable` can be changed for this post\/connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    }
                  }
                }
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/posts\/(?P<parent>[\\d]+)\/revisions": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/posts\/(?P<parent>[\\d]+)\/revisions\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as revisions do not support trashing.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/pages": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "default": [],
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "menu_order": {
                "required": false,
                "description": "Limit result set to posts with a specific menu_order value.",
                "type": "integer"
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title",
                  "menu_order"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "default": [],
                "description": "Limit result set to items with particular parent IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "parent_exclude": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items except those of a particular parent ID.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "menu_order": {
                "required": false,
                "description": "The order of the object in relation to other object of its type.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/pages"
        }
      },
      "\/wp\/v2\/pages\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "menu_order": {
                "required": false,
                "description": "The order of the object in relation to other object of its type.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/pages\/(?P<parent>[\\d]+)\/revisions": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/pages\/(?P<parent>[\\d]+)\/revisions\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as revisions do not support trashing.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/media": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "default": [],
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "default": [],
                "description": "Limit result set to items with particular parent IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "parent_exclude": {
                "required": false,
                "default": [],
                "description": "Limit result set to all items except those of a particular parent ID.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "inherit",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "inherit",
                    "private",
                    "trash"
                  ],
                  "type": "string"
                }
              },
              "media_type": {
                "required": false,
                "enum": [
                  "image",
                  "video",
                  "text",
                  "application",
                  "audio"
                ],
                "description": "Limit result set to attachments of a particular media type.",
                "type": "string"
              },
              "mime_type": {
                "required": false,
                "description": "Limit result set to attachments of a particular MIME type.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "alt_text": {
                "required": false,
                "description": "Alternative text to display when attachment is not displayed.",
                "type": "string"
              },
              "caption": {
                "required": false,
                "description": "The attachment caption.",
                "type": "object"
              },
              "description": {
                "required": false,
                "description": "The attachment description.",
                "type": "object"
              },
              "post": {
                "required": false,
                "description": "The ID for the associated post of the attachment.",
                "type": "integer"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/media"
        }
      },
      "\/wp\/v2\/media\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "alt_text": {
                "required": false,
                "description": "Alternative text to display when attachment is not displayed.",
                "type": "string"
              },
              "caption": {
                "required": false,
                "description": "The attachment caption.",
                "type": "object"
              },
              "description": {
                "required": false,
                "description": "The attachment description.",
                "type": "object"
              },
              "post": {
                "required": false,
                "description": "The ID for the associated post of the attachment.",
                "type": "integer"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/product": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "default": [],
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "jetpack_publicize_connections": {
                "required": false,
                "default": [],
                "type": "array",
                "items": {
                  "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                  "title": "jetpack-publicize-post-connection",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the Publicize Connection",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "service_name": {
                      "description": "Alphanumeric identifier for the Publicize Service",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "display_name": {
                      "description": "Username of the connected account",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "enabled": {
                      "description": "Whether to share to this connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ]
                    },
                    "done": {
                      "description": "Whether Publicize has already finished sharing for this post",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    },
                    "toggleable": {
                      "description": "Whether `enable` can be changed for this post\/connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    }
                  }
                }
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/product"
        }
      },
      "\/wp\/v2\/product\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not comments are open on the object.",
                "type": "string"
              },
              "ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Whether or not the object can be pinged.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              },
              "jetpack_publicize_connections": {
                "required": false,
                "type": "array",
                "items": {
                  "$schema": "http:\/\/json-schema.org\/draft-04\/schema#",
                  "title": "jetpack-publicize-post-connection",
                  "type": "object",
                  "properties": {
                    "id": {
                      "description": "Unique identifier for the Publicize Connection",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "service_name": {
                      "description": "Alphanumeric identifier for the Publicize Service",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "display_name": {
                      "description": "Username of the connected account",
                      "type": "string",
                      "context": [
                        "view",
                        "edit"
                      ],
                      "readonly": true
                    },
                    "enabled": {
                      "description": "Whether to share to this connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ]
                    },
                    "done": {
                      "description": "Whether Publicize has already finished sharing for this post",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    },
                    "toggleable": {
                      "description": "Whether `enable` can be changed for this post\/connection",
                      "type": "boolean",
                      "context": [
                        "edit"
                      ],
                      "readonly": true
                    }
                  }
                }
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/feedback": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/feedback"
        }
      },
      "\/wp\/v2\/feedback\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/jp_pay_order": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/jp_pay_order"
        }
      },
      "\/wp\/v2\/jp_pay_order\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "excerpt": {
                "required": false,
                "description": "The excerpt for the object.",
                "type": "object"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/jp_pay_product": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to posts published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "default": [],
                "description": "Limit result set to posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes posts assigned to specific authors.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "before": {
                "required": false,
                "description": "Limit response to posts published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date",
                "enum": [
                  "author",
                  "date",
                  "id",
                  "include",
                  "modified",
                  "parent",
                  "relevance",
                  "slug",
                  "include_slugs",
                  "title"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to posts with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "status": {
                "required": false,
                "default": "publish",
                "description": "Limit result set to posts assigned one or more statuses.",
                "type": "array",
                "items": {
                  "enum": [
                    "publish",
                    "future",
                    "draft",
                    "pending",
                    "private",
                    "trash",
                    "auto-draft",
                    "inherit",
                    "request-pending",
                    "request-confirmed",
                    "request-failed",
                    "request-completed",
                    "in-progress",
                    "failed",
                    "wc-pending",
                    "wc-processing",
                    "wc-on-hold",
                    "wc-completed",
                    "wc-cancelled",
                    "wc-refunded",
                    "wc-failed",
                    "spam",
                    "wc-cia-investigation",
                    "any"
                  ],
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/jp_pay_product"
        }
      },
      "\/wp\/v2\/jp_pay_product\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the object unique to its type.",
                "type": "string"
              },
              "status": {
                "required": false,
                "enum": [
                  "publish",
                  "future",
                  "draft",
                  "pending",
                  "private",
                  "in-progress",
                  "failed",
                  "wc-pending",
                  "wc-processing",
                  "wc-on-hold",
                  "wc-completed",
                  "wc-cancelled",
                  "wc-refunded",
                  "wc-failed",
                  "spam",
                  "wc-cia-investigation"
                ],
                "description": "A named status for the object.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "A password to protect access to the content and excerpt.",
                "type": "string"
              },
              "title": {
                "required": false,
                "description": "The title for the object.",
                "type": "object"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "author": {
                "required": false,
                "description": "The ID for the author of the object.",
                "type": "integer"
              },
              "featured_media": {
                "required": false,
                "description": "The ID of the featured media for the object.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              },
              "template": {
                "required": false,
                "description": "The theme file to use to display the object.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/types": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/types"
        }
      },
      "\/wp\/v2\/types\/(?P<type>[\\w-]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "type": {
                "required": false,
                "description": "An alphanumeric identifier for the post type.",
                "type": "string"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/statuses": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/statuses"
        }
      },
      "\/wp\/v2\/statuses\/(?P<status>[\\w-]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "status": {
                "required": false,
                "description": "An alphanumeric identifier for the status.",
                "type": "string"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/taxonomies": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "type": {
                "required": false,
                "description": "Limit results to taxonomies associated with a specific post type.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/taxonomies"
        }
      },
      "\/wp\/v2\/taxonomies\/(?P<taxonomy>[\\w-]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "taxonomy": {
                "required": false,
                "description": "An alphanumeric identifier for the taxonomy.",
                "type": "string"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/categories": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "order": {
                "required": false,
                "default": "asc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "name",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "slug",
                  "include_slugs",
                  "term_group",
                  "description",
                  "count"
                ],
                "description": "Sort collection by term attribute.",
                "type": "string"
              },
              "hide_empty": {
                "required": false,
                "default": false,
                "description": "Whether to hide terms not assigned to any posts.",
                "type": "boolean"
              },
              "parent": {
                "required": false,
                "description": "Limit result set to terms assigned to a specific parent.",
                "type": "integer"
              },
              "post": {
                "required": false,
                "description": "Limit result set to terms assigned to a specific post.",
                "type": "integer"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to terms with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "description": {
                "required": false,
                "description": "HTML description of the term.",
                "type": "string"
              },
              "name": {
                "required": true,
                "description": "HTML title for the term.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the term unique to its type.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "description": "The parent term ID.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/categories"
        }
      },
      "\/wp\/v2\/categories\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "description": {
                "required": false,
                "description": "HTML description of the term.",
                "type": "string"
              },
              "name": {
                "required": false,
                "description": "HTML title for the term.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the term unique to its type.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "description": "The parent term ID.",
                "type": "integer"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as terms do not support trashing.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/tags": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "asc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "name",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "slug",
                  "include_slugs",
                  "term_group",
                  "description",
                  "count"
                ],
                "description": "Sort collection by term attribute.",
                "type": "string"
              },
              "hide_empty": {
                "required": false,
                "default": false,
                "description": "Whether to hide terms not assigned to any posts.",
                "type": "boolean"
              },
              "post": {
                "required": false,
                "description": "Limit result set to terms assigned to a specific post.",
                "type": "integer"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to terms with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "description": {
                "required": false,
                "description": "HTML description of the term.",
                "type": "string"
              },
              "name": {
                "required": true,
                "description": "HTML title for the term.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the term unique to its type.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/tags"
        }
      },
      "\/wp\/v2\/tags\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "description": {
                "required": false,
                "description": "HTML description of the term.",
                "type": "string"
              },
              "name": {
                "required": false,
                "description": "HTML title for the term.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the term unique to its type.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the term.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as terms do not support trashing.",
                "type": "boolean"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/users": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "asc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "name",
                "enum": [
                  "id",
                  "include",
                  "name",
                  "registered_date",
                  "slug",
                  "include_slugs",
                  "email",
                  "url"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "Limit result set to users with one or more specific slugs.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "roles": {
                "required": false,
                "description": "Limit result set to users matching at least one specific role provided. Accepts csv list or single role.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "who": {
                "required": false,
                "enum": [
                  "authors"
                ],
                "description": "Limit result set to users who are considered authors.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "username": {
                "required": true,
                "description": "Login name for the user.",
                "type": "string"
              },
              "name": {
                "required": false,
                "description": "Display name for the user.",
                "type": "string"
              },
              "first_name": {
                "required": false,
                "description": "First name for the user.",
                "type": "string"
              },
              "last_name": {
                "required": false,
                "description": "Last name for the user.",
                "type": "string"
              },
              "email": {
                "required": true,
                "description": "The email address for the user.",
                "type": "string"
              },
              "url": {
                "required": false,
                "description": "URL of the user.",
                "type": "string"
              },
              "description": {
                "required": false,
                "description": "Description of the user.",
                "type": "string"
              },
              "locale": {
                "required": false,
                "enum": [
                  "",
                  "en_US"
                ],
                "description": "Locale for the user.",
                "type": "string"
              },
              "nickname": {
                "required": false,
                "description": "The nickname for the user.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the user.",
                "type": "string"
              },
              "roles": {
                "required": false,
                "description": "Roles assigned to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "password": {
                "required": true,
                "description": "Password for the user (never included).",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/users"
        }
      },
      "\/wp\/v2\/users\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the user.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the user.",
                "type": "integer"
              },
              "username": {
                "required": false,
                "description": "Login name for the user.",
                "type": "string"
              },
              "name": {
                "required": false,
                "description": "Display name for the user.",
                "type": "string"
              },
              "first_name": {
                "required": false,
                "description": "First name for the user.",
                "type": "string"
              },
              "last_name": {
                "required": false,
                "description": "Last name for the user.",
                "type": "string"
              },
              "email": {
                "required": false,
                "description": "The email address for the user.",
                "type": "string"
              },
              "url": {
                "required": false,
                "description": "URL of the user.",
                "type": "string"
              },
              "description": {
                "required": false,
                "description": "Description of the user.",
                "type": "string"
              },
              "locale": {
                "required": false,
                "enum": [
                  "",
                  "en_US"
                ],
                "description": "Locale for the user.",
                "type": "string"
              },
              "nickname": {
                "required": false,
                "description": "The nickname for the user.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the user.",
                "type": "string"
              },
              "roles": {
                "required": false,
                "description": "Roles assigned to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "password": {
                "required": false,
                "description": "Password for the user (never included).",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the user.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as users do not support trashing.",
                "type": "boolean"
              },
              "reassign": {
                "required": true,
                "description": "Reassign the deleted user's posts and links to this user ID.",
                "type": "integer"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/users\/me": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "username": {
                "required": false,
                "description": "Login name for the user.",
                "type": "string"
              },
              "name": {
                "required": false,
                "description": "Display name for the user.",
                "type": "string"
              },
              "first_name": {
                "required": false,
                "description": "First name for the user.",
                "type": "string"
              },
              "last_name": {
                "required": false,
                "description": "Last name for the user.",
                "type": "string"
              },
              "email": {
                "required": false,
                "description": "The email address for the user.",
                "type": "string"
              },
              "url": {
                "required": false,
                "description": "URL of the user.",
                "type": "string"
              },
              "description": {
                "required": false,
                "description": "Description of the user.",
                "type": "string"
              },
              "locale": {
                "required": false,
                "enum": [
                  "",
                  "en_US"
                ],
                "description": "Locale for the user.",
                "type": "string"
              },
              "nickname": {
                "required": false,
                "description": "The nickname for the user.",
                "type": "string"
              },
              "slug": {
                "required": false,
                "description": "An alphanumeric identifier for the user.",
                "type": "string"
              },
              "roles": {
                "required": false,
                "description": "Roles assigned to the user.",
                "type": "array",
                "items": {
                  "type": "string"
                }
              },
              "password": {
                "required": false,
                "description": "Password for the user (never included).",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "force": {
                "required": false,
                "default": false,
                "description": "Required to be true, as users do not support trashing.",
                "type": "boolean"
              },
              "reassign": {
                "required": true,
                "description": "Reassign the deleted user's posts and links to this user ID.",
                "type": "integer"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/users\/me"
        }
      },
      "\/wp\/v2\/comments": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "page": {
                "required": false,
                "default": 1,
                "description": "Current page of the collection.",
                "type": "integer"
              },
              "per_page": {
                "required": false,
                "default": 10,
                "description": "Maximum number of items to be returned in result set.",
                "type": "integer"
              },
              "search": {
                "required": false,
                "description": "Limit results to those matching a string.",
                "type": "string"
              },
              "after": {
                "required": false,
                "description": "Limit response to comments published after a given ISO8601 compliant date.",
                "type": "string"
              },
              "author": {
                "required": false,
                "description": "Limit result set to comments assigned to specific user IDs. Requires authorization.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_exclude": {
                "required": false,
                "description": "Ensure result set excludes comments assigned to specific user IDs. Requires authorization.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "author_email": {
                "required": false,
                "description": "Limit result set to that from a specific author email. Requires authorization.",
                "type": "string"
              },
              "before": {
                "required": false,
                "description": "Limit response to comments published before a given ISO8601 compliant date.",
                "type": "string"
              },
              "exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "include": {
                "required": false,
                "default": [],
                "description": "Limit result set to specific IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "offset": {
                "required": false,
                "description": "Offset the result set by a specific number of items.",
                "type": "integer"
              },
              "order": {
                "required": false,
                "default": "desc",
                "enum": [
                  "asc",
                  "desc"
                ],
                "description": "Order sort attribute ascending or descending.",
                "type": "string"
              },
              "orderby": {
                "required": false,
                "default": "date_gmt",
                "enum": [
                  "date",
                  "date_gmt",
                  "id",
                  "include",
                  "post",
                  "parent",
                  "type"
                ],
                "description": "Sort collection by object attribute.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "default": [],
                "description": "Limit result set to comments of specific parent IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "parent_exclude": {
                "required": false,
                "default": [],
                "description": "Ensure result set excludes specific parent IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "post": {
                "required": false,
                "default": [],
                "description": "Limit result set to comments assigned to specific post IDs.",
                "type": "array",
                "items": {
                  "type": "integer"
                }
              },
              "status": {
                "required": false,
                "default": "approve",
                "description": "Limit result set to comments assigned a specific status. Requires authorization.",
                "type": "string"
              },
              "type": {
                "required": false,
                "default": "comment",
                "description": "Limit result set to comments assigned a specific type. Requires authorization.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the post if it is password protected.",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST"
            ],
            "args": {
              "author": {
                "required": false,
                "description": "The ID of the user object, if author was a user.",
                "type": "integer"
              },
              "author_email": {
                "required": false,
                "description": "Email address for the object author.",
                "type": "string"
              },
              "author_ip": {
                "required": false,
                "description": "IP address for the object author.",
                "type": "string"
              },
              "author_name": {
                "required": false,
                "description": "Display name for the object author.",
                "type": "string"
              },
              "author_url": {
                "required": false,
                "description": "URL for the object author.",
                "type": "string"
              },
              "author_user_agent": {
                "required": false,
                "description": "User agent for the object author.",
                "type": "string"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "default": 0,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "post": {
                "required": false,
                "default": 0,
                "description": "The ID of the associated post object.",
                "type": "integer"
              },
              "status": {
                "required": false,
                "description": "State of the object.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/comments"
        }
      },
      "\/wp\/v2\/comments\/(?P<id>[\\d]+)": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH",
          "DELETE"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "context": {
                "required": false,
                "default": "view",
                "enum": [
                  "view",
                  "embed",
                  "edit"
                ],
                "description": "Scope under which the request is made; determines fields present in response.",
                "type": "string"
              },
              "password": {
                "required": false,
                "description": "The password for the parent post of the comment (if the post is password protected).",
                "type": "string"
              }
            }
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "author": {
                "required": false,
                "description": "The ID of the user object, if author was a user.",
                "type": "integer"
              },
              "author_email": {
                "required": false,
                "description": "Email address for the object author.",
                "type": "string"
              },
              "author_ip": {
                "required": false,
                "description": "IP address for the object author.",
                "type": "string"
              },
              "author_name": {
                "required": false,
                "description": "Display name for the object author.",
                "type": "string"
              },
              "author_url": {
                "required": false,
                "description": "URL for the object author.",
                "type": "string"
              },
              "author_user_agent": {
                "required": false,
                "description": "User agent for the object author.",
                "type": "string"
              },
              "content": {
                "required": false,
                "description": "The content for the object.",
                "type": "object"
              },
              "date": {
                "required": false,
                "description": "The date the object was published, in the site's timezone.",
                "type": "string"
              },
              "date_gmt": {
                "required": false,
                "description": "The date the object was published, as GMT.",
                "type": "string"
              },
              "parent": {
                "required": false,
                "description": "The ID for the parent of the object.",
                "type": "integer"
              },
              "post": {
                "required": false,
                "description": "The ID of the associated post object.",
                "type": "integer"
              },
              "status": {
                "required": false,
                "description": "State of the object.",
                "type": "string"
              },
              "meta": {
                "required": false,
                "description": "Meta fields.",
                "type": "object"
              }
            }
          },
          {
            "methods": [
              "DELETE"
            ],
            "args": {
              "id": {
                "required": false,
                "description": "Unique identifier for the object.",
                "type": "integer"
              },
              "force": {
                "required": false,
                "default": false,
                "description": "Whether to bypass trash and force deletion.",
                "type": "boolean"
              },
              "password": {
                "required": false,
                "description": "The password for the parent post of the comment (if the post is password protected).",
                "type": "string"
              }
            }
          }
        ]
      },
      "\/wp\/v2\/settings": {
        "namespace": "wp\/v2",
        "methods": [
          "GET",
          "POST",
          "PUT",
          "PATCH"
        ],
        "endpoints": [
          {
            "methods": [
              "GET"
            ],
            "args": []
          },
          {
            "methods": [
              "POST",
              "PUT",
              "PATCH"
            ],
            "args": {
              "title": {
                "required": false,
                "description": "Site title.",
                "type": "string"
              },
              "description": {
                "required": false,
                "description": "Site tagline.",
                "type": "string"
              },
              "url": {
                "required": false,
                "description": "Site URL.",
                "type": "string"
              },
              "email": {
                "required": false,
                "description": "This address is used for admin purposes, like new user notification.",
                "type": "string"
              },
              "timezone": {
                "required": false,
                "description": "A city in the same timezone as you.",
                "type": "string"
              },
              "date_format": {
                "required": false,
                "description": "A date format for all date strings.",
                "type": "string"
              },
              "time_format": {
                "required": false,
                "description": "A time format for all time strings.",
                "type": "string"
              },
              "start_of_week": {
                "required": false,
                "description": "A day number of the week that the week should start on.",
                "type": "integer"
              },
              "language": {
                "required": false,
                "description": "WordPress locale code.",
                "type": "string"
              },
              "use_smilies": {
                "required": false,
                "description": "Convert emoticons like :-) and :-P to graphics on display.",
                "type": "boolean"
              },
              "default_category": {
                "required": false,
                "description": "Default post category.",
                "type": "integer"
              },
              "default_post_format": {
                "required": false,
                "description": "Default post format.",
                "type": "string"
              },
              "posts_per_page": {
                "required": false,
                "description": "Blog pages show at most.",
                "type": "integer"
              },
              "default_ping_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Allow link notifications from other blogs (pingbacks and trackbacks) on new articles.",
                "type": "string"
              },
              "default_comment_status": {
                "required": false,
                "enum": [
                  "open",
                  "closed"
                ],
                "description": "Allow people to post comments on new articles.",
                "type": "string"
              }
            }
          }
        ],
        "_links": {
          "self": "https:\/\/paperairplane.store\/wp-json\/wp\/v2\/settings"
        }
      }
    },
    "_links": {
      "help": [
        {
          "href": "http:\/\/v2.wp-api.org\/"
        }
      ]
    }
  }
}
